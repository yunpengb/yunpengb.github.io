[{"title":"MarkDown 小总结","url":"http://yoursite.com/2017/04/29/markdown_summary/","content":"<p>###放入文字超链接<br> [ESPyHarp](<a href=\"https://git/11\" target=\"_blank\" rel=\"external\">https://git/11</a>)</p>\n<p>###放入图片<br>![](<a href=\"http://oi.com/aa.jpg\" target=\"_blank\" rel=\"external\">http://oi.com/aa.jpg</a>)</p>\n<p>###段落前空两格<br>\\&emsp;\\&emsp;</p>\n<p>###另起一行<br>在前一行的行尾加入多过2个空格</p>\n<p>###插入code<br>方法是在code的上下一行各加上三个上标点 ```     </p>\n<h3 id=\"在-markdown-中显示-markdown-原文\"><a href=\"#在-markdown-中显示-markdown-原文\" class=\"headerlink\" title=\"在 markdown 中显示 markdown 原文\"></a>在 markdown 中显示 markdown 原文</h3><p>在特殊字符前加入\\即可，即阻止转义</p>\n","categories":[],"tags":[]},{"title":"MicroPython ESP8266 操作指南","url":"http://yoursite.com/2017/03/20/ESP_MicroPython_Guide/","content":"<p>##擦掉flash<br>MicroPython的 <a href=\"http://docs.micropython.org/en/latest/esp8266/esp8266/tutorial/intro.html#intro\" target=\"_blank\" rel=\"external\">intro</a> 里1.4里有介绍。<br>另外，如果是在win os下，擦除flash的命令大概是<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">esptool.py --port com3 erase_flash</div></pre></td></tr></table></figure></p>\n<p>##刷入MicroPython 固件<br>下载对应ESP8266的MicroPython固件的地址在这里 <a href=\"http://www.micropython.org/download\" target=\"_blank\" rel=\"external\">download</a> ，<br>你会得到类似esp8266-20170108-v1.8.7.bin 这样命名的文件。<br>刷入方法在上面的1.4节也有介绍，主要就是依靠下面这句<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">esptool.py --port com3 --baud 115200 write_flash --flash_size=detect 0 esp8266-20170108-v1.8.7.bin</div></pre></td></tr></table></figure></p>\n<p>注意，我尝试过512k专属版，似乎不好用，所以还是使用长期稳定版比较好（每夜版没有试过）。</p>\n<p>##查看文件系统<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">uos.listdir() # 查看路径下的文件</div><div class=\"line\">uos.listdir(&apos;dir&apos;) #查看文件夹下的文件</div><div class=\"line\">uos.getcwd() #查看当前目录, 根目录是&apos;&apos;</div><div class=\"line\">uos.chdir()  #改变当前目录</div></pre></td></tr></table></figure></p>\n<p>##查看文件<br>使用打开文件的方法<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">f = open(&apos;main.py&apos;, &apos;r&apos;)</div><div class=\"line\">f.read()</div><div class=\"line\">&quot;print(&apos;Welcome~&apos;)\\nprint(&apos;Hello!&apos;)\\n&quot;</div></pre></td></tr></table></figure></p>\n<p>##删除文件<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">uos.remove(&apos;main.py&apos;)</div></pre></td></tr></table></figure></p>\n<p>##Software Reset<br>在串口可用的时候，输入Ctrl + D 即可软复位</p>\n<p>##Hardware Reset<br>断电时硬复位</p>\n<p>##常用工具<br> <a href=\"https://github.com/salesiopark/ESPyHarp\" target=\"_blank\" rel=\"external\">ESPyHarp</a><br> 是一个可以给MP传输文件的java程序，win下使用，硬伤是无法快速便捷的中断com占用，导致使用起来不方便。<br><a href=\"https://github.com/micropython/webrepl/archive/master.zip\" target=\"_blank\" rel=\"external\">webrepl client html</a><br>是一个网页形式的文件传输工具，使用起来比较方便，每次连接一般是要输入密码（根据MP的设置来）.<br>esptool<br>这个上面都有说，python 公共库里集成了，使用pip安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">pip install esptool</div></pre></td></tr></table></figure></p>\n<h2 id=\"已知问题\"><a href=\"#已知问题\" class=\"headerlink\" title=\"已知问题\"></a>已知问题</h2><p>利用http 按钮发送反馈的时候，不能使用360浏览器，它会拦截反馈信息</p>\n<h2 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h2><p><a href=\"http://www.micropython.org\" target=\"_blank\" rel=\"external\">MicroPython官网</a><br><a href=\"https://my.oschina.net/shaoziyang/blog/781235\" target=\"_blank\" rel=\"external\">介绍1</a><br><a href=\"http://bbs.eeworld.com.cn/forum-243-1.html\" target=\"_blank\" rel=\"external\">论坛</a><br><a href=\"http://blog.csdn.net/yannanxiu/article/details/53966374\" target=\"_blank\" rel=\"external\">介绍2</a></p>\n","categories":[],"tags":[]},{"title":"python 版的ESP控制端","url":"http://yoursite.com/2017/01/20/py_esp_server/","content":"<p>&emsp;&emsp;之前用lua脚本写了一个发送html的http server放在ESP里控制电路通断很好用，<br>&emsp;&emsp;最近发现这货竟然还有专属的MicroPython 固件，作为一个pythoner,我必须要写个python版的，也方面以后加入更多的自定义功能。<br>&emsp;&emsp;所以最近花了点时间写了一个python版的ESP power control server。<br>代码如下：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div><div class=\"line\">49</div><div class=\"line\">50</div><div class=\"line\">51</div><div class=\"line\">52</div><div class=\"line\">53</div><div class=\"line\">54</div><div class=\"line\">55</div><div class=\"line\">56</div><div class=\"line\">57</div><div class=\"line\">58</div><div class=\"line\">59</div><div class=\"line\">60</div><div class=\"line\">61</div><div class=\"line\">62</div><div class=\"line\">63</div><div class=\"line\">64</div><div class=\"line\">65</div><div class=\"line\">66</div><div class=\"line\">67</div><div class=\"line\">68</div><div class=\"line\">69</div><div class=\"line\">70</div><div class=\"line\">71</div><div class=\"line\">72</div><div class=\"line\">73</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"comment\"># -*- coding: utf-8 -*-</span></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">from</span> machine <span class=\"keyword\">import</span> Pin</div><div class=\"line\"><span class=\"keyword\">import</span> socket</div><div class=\"line\"><span class=\"keyword\">import</span> network</div><div class=\"line\"><span class=\"keyword\">import</span> webrepl</div><div class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</div><div class=\"line\"></div><div class=\"line\">html = <span class=\"string\">\"\"\"</span></div><div class=\"line\">&lt;h1&gt; Power switch&lt;/h1&gt;</div><div class=\"line\">&lt;p&gt;switch1 &lt;a href=\\\"?pin=ON1\\\"&gt;&lt;button&gt;ON&lt;/button&gt;&lt;/a&gt; &lt;a href=\\\"?pin=OFF1\\\"&gt;&lt;button&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;</div><div class=\"line\">&lt;p&gt;switch2 &lt;a href=\\\"?pin=ON2\\\"&gt;&lt;button&gt;ON&lt;/button&gt;&lt;/a&gt; &lt;a href=\\\"?pin=OFF2\\\"&gt;&lt;button&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;</div><div class=\"line\">\"\"\"</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">connectwifi</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    sta_if = network.WLAN(network.STA_IF)</div><div class=\"line\">    sta_if.active(<span class=\"keyword\">True</span>)</div><div class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"connect WIFI, please wait...\"</span>)</div><div class=\"line\">    sleep(<span class=\"number\">4</span>)</div><div class=\"line\">    sta_if.connect(<span class=\"string\">\"wifi-ssid\"</span>,<span class=\"string\">\"wifi-password\"</span>)</div><div class=\"line\">    sleep(<span class=\"number\">6</span>)</div><div class=\"line\">    print(<span class=\"string\">\"WIFI connected ! IP address is (\"</span>,sta_if.ifconfig()[<span class=\"number\">0</span>],<span class=\"string\">\")\"</span>)</div><div class=\"line\">    webrepl.start()</div><div class=\"line\">    print(<span class=\"string\">\"User init Done!\"</span>)</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">op1</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    p2.value(<span class=\"number\">0</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dn1</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    p2.value(<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">op2</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"switch 2 is open\"</span>)</div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">dn2</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    <span class=\"keyword\">print</span> (<span class=\"string\">\"switch 2 is down\"</span>)    </div><div class=\"line\"></div><div class=\"line\">p2 = Pin(<span class=\"number\">2</span>,Pin.OUT)</div><div class=\"line\">pool = &#123;<span class=\"string\">'ON1'</span>:op1,<span class=\"string\">'ON2'</span>:op2,<span class=\"string\">'OFF1'</span>:dn1,<span class=\"string\">'OFF2'</span>:dn2&#125;</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">startServer</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    addr = socket.getaddrinfo(<span class=\"string\">'0.0.0.0'</span>, <span class=\"number\">80</span>)[<span class=\"number\">0</span>][<span class=\"number\">-1</span>]</div><div class=\"line\">    sleep(<span class=\"number\">2</span>)</div><div class=\"line\">    s = socket.socket()</div><div class=\"line\">    sleep(<span class=\"number\">2</span>)</div><div class=\"line\">    s.bind(addr)</div><div class=\"line\">    sleep(<span class=\"number\">2</span>)</div><div class=\"line\">    s.listen(<span class=\"number\">1</span>)</div><div class=\"line\">    print(<span class=\"string\">'listening on'</span>, addr)</div><div class=\"line\">    sleep(<span class=\"number\">2</span>)</div><div class=\"line\">    <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">        cl, addr = s.accept()</div><div class=\"line\">        cl_file = cl.makefile(<span class=\"string\">'rwb'</span>, <span class=\"number\">0</span>)</div><div class=\"line\">        <span class=\"keyword\">while</span> <span class=\"keyword\">True</span>:</div><div class=\"line\">            <span class=\"keyword\">try</span>:</div><div class=\"line\">                line = cl_file.readline()</div><div class=\"line\">            <span class=\"keyword\">except</span>:</div><div class=\"line\">                <span class=\"keyword\">continue</span></div><div class=\"line\">            <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> line <span class=\"keyword\">or</span> line == <span class=\"string\">b'\\r\\n'</span>:</div><div class=\"line\">                <span class=\"keyword\">break</span></div><div class=\"line\">            <span class=\"keyword\">else</span>:</div><div class=\"line\">                firstline = str(line).split(<span class=\"string\">\"\\n\"</span>)[<span class=\"number\">0</span>]</div><div class=\"line\">                <span class=\"keyword\">if</span> <span class=\"string\">\"GET\"</span> <span class=\"keyword\">in</span> firstline:</div><div class=\"line\">                    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> pool.keys():</div><div class=\"line\">                        <span class=\"keyword\">if</span> i <span class=\"keyword\">in</span> firstline:</div><div class=\"line\">                            pool.get(i)()</div><div class=\"line\">                            <span class=\"keyword\">break</span></div><div class=\"line\"></div><div class=\"line\">        cl.send(html)</div><div class=\"line\">        cl.close()</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ok</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    connectwifi()</div><div class=\"line\">    startServer()</div><div class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">\"__main__\"</span>:</div><div class=\"line\">    ok()</div></pre></td></tr></table></figure></p>\n<p>将以上文件命名为ss.py 放入ESP 根目录<br>按照MicroPython 的Guide的说法来做，放入一个main.py文件作为钩子来启动它：<br><figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> ss</div><div class=\"line\">ss.ok()</div></pre></td></tr></table></figure></p>\n<p>然后下电复位下，就可以自动连接WIFI，并建立HTTP server.外部用户通过IP地址找到它，并控制电路通断。<br>&emsp;&emsp;<br>&emsp;&emsp;已知问题</p>\n<ul>\n<li>使用360浏览器浏览网页无法通过按钮去控制ESP，使用IE和Chrome 可以控制。</li>\n<li>稳定性待验证，暂未做过长时间使用测试</li>\n</ul>\n","categories":[],"tags":[]},{"title":"每日工作划分文件夹","url":"http://yoursite.com/2016/10/09/create_daily_dir/","content":"<p>&emsp;&emsp;经常工作的时候，每天处理大量的文件很容易混乱和丢失。<br>&emsp;&emsp;我有个想法，每天的工作用到的文件都独立的放到一个文件夹里。这样整齐一些也方便管理。<br>&emsp;&emsp;于是我用python写了一个小脚本。在安装了解释器的PC里只需要双击即可执行，即可生成以当天日期为名字的文件夹。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> time</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">makeDIRwithDate</span><span class=\"params\">()</span>:</span>    </div><div class=\"line\">\ttimestat = timestamp = time.strftime(<span class=\"string\">'%Y-%m-%d'</span>,time.localtime(time.time())) </div><div class=\"line\">\texistdir = os.path.exists(timestat)</div><div class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"keyword\">not</span> existdir:</div><div class=\"line\">\t\tos.mkdir(timestat)</div><div class=\"line\">\t\t<span class=\"keyword\">print</span> <span class=\"string\">\"make dir:[%s]\"</span> % timestat</div><div class=\"line\">\t<span class=\"keyword\">else</span>:</div><div class=\"line\">\t\t<span class=\"keyword\">print</span> <span class=\"string\">'folder[%s] already exists'</span> % timestat</div><div class=\"line\">makeDIRwithDate()</div></pre></td></tr></table></figure>\n<p>&emsp;&emsp;创建了文件夹后，剩下就是手工把每天用到的文件复制进去保存。效果如下图。</p>\n<p><img src=\"http://oi16bpd89.bkt.clouddn.com/dir.png\" alt=\"\"></p>\n","categories":[],"tags":[]},{"title":"DIY 远程控制电源模块","url":"http://yoursite.com/2016/08/15/DIY_remote_power_switch/","content":"<p>&emsp;&emsp;我们的自动化测试环境一直缺少一个可以远程控制的供电系统来控制Radio产品的开关机。之前在波兰的时候，我看到老外的自动化Lab全部采用的是商业控制产品，可使用web页面控制，也可以使用简单的协议控制（ssh或者Telnet发送简单的命令控制外部电路）。<br>&emsp;&emsp;按照老外的配置，一套控制核心+几路ABB继电器+几路空开。我查了下报价，3000欧元一个控制中心，继电器也得300RMB一个。总体下来一万多RMB。就为了自动开个机，花销挺贵的。老板也没同意，搁置了这个想法一段时间。<br>&emsp;&emsp;后来混树莓派论坛的时候，我发现有人在用ESP8266组装各种很屌的玩意，其中就包括可控电源开关，很有意思。我随后淘宝了几只，一只只要25块，很便宜的说。<br>&emsp;&emsp;以下记录的就是实现可控电源开关的过程。</p>\n<h4 id=\"直接上demo图\"><a href=\"#直接上demo图\" class=\"headerlink\" title=\"直接上demo图\"></a>直接上demo图</h4><p><img src=\"http://oi16bpd89.bkt.clouddn.com/setup_remote_power.jpg\" alt=\"\"><br>&emsp;&emsp;这个demo使用的材料有：ESP8266开发板1只+ LED灯2个 + 电阻一只 + 若干导线 + 5V继电器一枚 + 小米移动电源一个，除掉小米移动电源，花销大概是50块不到。</p>\n<h4 id=\"逻辑原理是这样的：\"><a href=\"#逻辑原理是这样的：\" class=\"headerlink\" title=\"逻辑原理是这样的：\"></a>逻辑原理是这样的：</h4><p><img src=\"http://oi16bpd89.bkt.clouddn.com/logi1.png\" alt=\"\"></p>\n<ul>\n<li>开发板有固定的3.3V和地，以及若干3.3V的GPIO引脚</li>\n<li>控制信号由D1 GPIO控制，图上的黄线</li>\n<li>经过LED的链路就是受控链路，LED可以换成任何我们想要控制上下电的设备。</li>\n<li>受控制的链路实际上有三个端口，一个固定端口，一个常开端口，一个常闭端口。我因为需要的场景是只在需要的时候关机，所以连接了常开端口。</li>\n<li>继电器的PIN角可以设置为用低电平触发电源断开，或者用高电平触发电源断开。<h4 id=\"经过我的尝试\"><a href=\"#经过我的尝试\" class=\"headerlink\" title=\"经过我的尝试\"></a>经过我的尝试</h4></li>\n<li>如果设置为高电平触发，当D1 GPIO端口从关变为开的时候，会从0V变为+3.3V，不足5V，无法作为“高电平”来触发继电器吸合（因为我买的这个继电器是5V驱动的）。</li>\n<li>如果设置为低电平触发，平时D1 保持常开，需要下电的时候，把D1关闭，从+3.3V变为0V，刚好是继电器认可的“低电平”。此时会触发继电器吸合。受控链路断开。电源关闭。目的达成。（PS：后面的代码是写的电源常闭）</li>\n</ul>\n<p>&emsp;&emsp;这里比较凑巧的是3.3V可以给继电器供电。所以就不需要再麻烦给继电器连接额外的电源，从而可以把整个装置做的很小。<br>同时，毕竟它是一个IOT开发板，是带WIFI芯片的，可以连接路由器。<br>参考了dingzz的 <a href=\"http://blog.csdn.NET/dingzz/article/details/46876503\" target=\"_blank\" rel=\"external\">http://blog.csdn.NET/dingzz/article/details/46876503</a> 文章<br>加入了一个网页特性，这里init.lua的代码如下(Lua脚本)：</p>\n<figure class=\"highlight lua\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div><div class=\"line\">36</div><div class=\"line\">37</div><div class=\"line\">38</div><div class=\"line\">39</div><div class=\"line\">40</div><div class=\"line\">41</div><div class=\"line\">42</div><div class=\"line\">43</div><div class=\"line\">44</div><div class=\"line\">45</div><div class=\"line\">46</div><div class=\"line\">47</div><div class=\"line\">48</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">'Setting up WIFI...'</span>)</div><div class=\"line\">wifi.setmode(wifi.STATION)</div><div class=\"line\">wifi.sta.config(<span class=\"string\">'WIFI_ssid'</span>, <span class=\"string\">'wifi_password'</span>)</div><div class=\"line\">wifi.sta.connect()</div><div class=\"line\">tmr.alarm(<span class=\"number\">1</span>,<span class=\"number\">1000</span>,<span class=\"number\">1</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">()</span></span></div><div class=\"line\"><span class=\"keyword\">if</span> wifi.sta.getip()==<span class=\"keyword\">nil</span> <span class=\"keyword\">then</span></div><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"IP unavaiable,Waiting...\"</span>)</div><div class=\"line\"><span class=\"keyword\">else</span></div><div class=\"line\">tmr.stop(<span class=\"number\">1</span>)</div><div class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">\"Config done, IP is \"</span>..wifi.sta.getip())</div><div class=\"line\"><span class=\"keyword\">end</span></div><div class=\"line\"><span class=\"keyword\">end</span>)</div><div class=\"line\">led1 = <span class=\"number\">1</span></div><div class=\"line\">led2 = <span class=\"number\">2</span></div><div class=\"line\">gpio.mode(led1, gpio.OUTPUT)</div><div class=\"line\">gpio.mode(led2, gpio.OUTPUT)</div><div class=\"line\">srv=net.createServer(net.TCP)</div><div class=\"line\">srv:listen(<span class=\"number\">80</span>,<span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(conn)</span></span></div><div class=\"line\">    conn:on(<span class=\"string\">\"receive\"</span>, <span class=\"function\"><span class=\"keyword\">function</span><span class=\"params\">(client,request)</span></span></div><div class=\"line\">        <span class=\"keyword\">local</span> buf = <span class=\"string\">\"\"</span>;</div><div class=\"line\">        <span class=\"keyword\">local</span> _, _, method, path, vars = <span class=\"built_in\">string</span>.find(request, <span class=\"string\">\"([A-Z]+) (.+)?(.+) HTTP\"</span>);</div><div class=\"line\">        <span class=\"keyword\">if</span>(method == <span class=\"keyword\">nil</span>)<span class=\"keyword\">then</span></div><div class=\"line\">            _, _, method, path = <span class=\"built_in\">string</span>.find(request, <span class=\"string\">\"([A-Z]+) (.+) HTTP\"</span>);</div><div class=\"line\">        <span class=\"keyword\">end</span></div><div class=\"line\">        <span class=\"keyword\">local</span> _GET = &#123;&#125;</div><div class=\"line\">        <span class=\"keyword\">if</span> (vars ~= <span class=\"keyword\">nil</span>)<span class=\"keyword\">then</span></div><div class=\"line\">            <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> <span class=\"built_in\">string</span>.gmatch(vars, <span class=\"string\">\"(%w+)=(%w+)&amp;*\"</span>) <span class=\"keyword\">do</span></div><div class=\"line\">                _GET[k] = v</div><div class=\"line\">            <span class=\"keyword\">end</span></div><div class=\"line\">        <span class=\"keyword\">end</span></div><div class=\"line\">        buf = buf..<span class=\"string\">\"&lt;h1&gt; ESP 8266 server&lt;/h1&gt;\"</span>;</div><div class=\"line\">        buf = buf..<span class=\"string\">\"&lt;p&gt;switch1 &lt;a href=\\\"?pin=ON1\\\"&gt;&lt;button&gt;ON&lt;/button&gt;&lt;/a&gt; &lt;a href=\\\"?pin=OFF1\\\"&gt;&lt;button&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;\"</span>;</div><div class=\"line\">        buf = buf..<span class=\"string\">\"&lt;p&gt;switch2 &lt;a href=\\\"?pin=ON2\\\"&gt;&lt;button&gt;ON&lt;/button&gt;&lt;/a&gt; &lt;a href=\\\"?pin=OFF2\\\"&gt;&lt;button&gt;OFF&lt;/button&gt;&lt;/a&gt;&lt;/p&gt;\"</span>;</div><div class=\"line\">        <span class=\"keyword\">local</span> _on,_off = <span class=\"string\">\"\"</span>,<span class=\"string\">\"\"</span></div><div class=\"line\">        <span class=\"keyword\">if</span>(_GET.pin == <span class=\"string\">\"ON1\"</span>)<span class=\"keyword\">then</span></div><div class=\"line\">              gpio.write(led1, gpio.HIGH);</div><div class=\"line\">        <span class=\"keyword\">elseif</span>(_GET.pin == <span class=\"string\">\"OFF1\"</span>)<span class=\"keyword\">then</span></div><div class=\"line\">              gpio.write(led1, gpio.LOW);</div><div class=\"line\">        <span class=\"keyword\">elseif</span>(_GET.pin == <span class=\"string\">\"ON2\"</span>)<span class=\"keyword\">then</span></div><div class=\"line\">              gpio.write(led2, gpio.HIGH);</div><div class=\"line\">        <span class=\"keyword\">elseif</span>(_GET.pin == <span class=\"string\">\"OFF2\"</span>)<span class=\"keyword\">then</span></div><div class=\"line\">              gpio.write(led2, gpio.LOW);</div><div class=\"line\">        <span class=\"keyword\">end</span></div><div class=\"line\">        client:send(buf);</div><div class=\"line\">        client:close();</div><div class=\"line\">        <span class=\"built_in\">collectgarbage</span>();</div><div class=\"line\">    <span class=\"keyword\">end</span>)</div><div class=\"line\"><span class=\"keyword\">end</span>)</div></pre></td></tr></table></figure>\n<p>init.lua传入开发板后，每次开机都会执行它，<br>这是NodeMcu的设计。<br>这里代码实现的功能就是连接WIFI，并建立了一个网页server.<br>只要知道开发板的IP地址，就可以通过浏览器控制你想控制的电源。<br>效果是这样的：<br><img src=\"http://oi16bpd89.bkt.clouddn.com/remote_web.png\" alt=\"\"></p>\n<h4 id=\"实验过程\"><a href=\"#实验过程\" class=\"headerlink\" title=\"实验过程\"></a>实验过程</h4><h5 id=\"1-init-lua-传到ESP8266里。\"><a href=\"#1-init-lua-传到ESP8266里。\" class=\"headerlink\" title=\"1.  init.lua 传到ESP8266里。\"></a>1.  init.lua 传到ESP8266里。</h5><p>开机，它即可连接上指定的WIFI信号，假如PC同时连入同一个无线网，就可以简单的通过网页访问ESP8266 server。<br>然后用浏览器打开IP地址（实际上，我之前调试的时候通过串口打印已经知道了这个IP，但是如果是首次换了脚本，直接通过外部电源开机，是不知道它的IP地址的。</p>\n<h5 id=\"2-测试开始：\"><a href=\"#2-测试开始：\" class=\"headerlink\" title=\"2. 测试开始：\"></a>2. 测试开始：</h5><p>插入小米电源，继电器供上了电，亮灯。<br>从串口可以看到，大概经过10秒，ESP8266自动连上WIFI，获得IP地址，在浏览器敲入这个IP地址可以进入WEB界面。<br>点击GPIO 0 ON，此时D1的高电平打开，但是LED并没有变化。<br>点击GPIO 2 OFF，此时D2变为低电平，然后应该是这个下降沿触发了继电器的输出端吸合，两端连接，形成回路。LED亮起。<br>点击GPIO 2 ON， D2变为高电平，继电器两端悬空，断开。LED灯熄灭。</p>\n<h5 id=\"实验结束\"><a href=\"#实验结束\" class=\"headerlink\" title=\"实验结束\"></a>实验结束</h5><p>&emsp;&emsp;如果和欧洲那个商用电源开关相比，不说安全和稳定性，咱这个功能也差不多了…嘿嘿，而且很便宜。<br>&emsp;&emsp;我使用的这个继电器是松乐的5V模块，我找了我们这的电源designer给我评估下这个小装置的安全性.他认为<br>继电器本身弱电和强电是分离的，是相对成熟的技术。所以没有什么风险。<br>&emsp;&emsp;这样我可以经由WIFI控制直流27V 和交流220V的设备无压力。只要不是频繁开关（也不建议这样做），都是OK的。后来我又加装了一个20A空气开关，防止短路情况发生。算是加了一道防护。<br>&emsp;&emsp;目前这个装置总是通过IP地址来控制，不太智能，我考虑后续再改进改进，比如加入一个字符串作为标志，然后通过ARP或者什么别的方式找标志，来实现“不知道IP地址”也可以建立通信的办法。<br>埋下待续。</p>\n<p>PS: 附上ESP 8266 原理图</p>\n<p><img src=\"http://oi16bpd89.bkt.clouddn.com/pinpin.png\" alt=\"\"></p>\n","categories":[],"tags":[]},{"title":"远程控制FSV读取EVM值","url":"http://yoursite.com/2015/05/15/remote_control_FSV/","content":"<p>&emsp;&emsp;经常要手动控制FSV测试RRH的上下行射频性能指标。重复操作太枯燥，还好查找手册发现了可以通过RJ45或者GPIB端口发送SCPI命令实现远程控制，<br>总结命令如下</p>\n<h3 id=\"测试-TX-EVM\"><a href=\"#测试-TX-EVM\" class=\"headerlink\" title=\"测试 TX EVM\"></a>测试 TX EVM</h3><table>\n<thead>\n<tr>\n<th><strong>command</strong></th>\n<th style=\"text-align:center\"><strong>解释</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“*RST”</td>\n<td style=\"text-align:center\">复位</td>\n</tr>\n<tr>\n<td>“INIT:CONT OFF”</td>\n<td style=\"text-align:center\">初始化频谱仪模式</td>\n</tr>\n<tr>\n<td>“SYST:DISP:UPD ON”</td>\n<td style=\"text-align:center\">屏幕给出显示</td>\n</tr>\n<tr>\n<td>“INST LTE”</td>\n<td style=\"text-align:center\">初始化LTE选件</td>\n</tr>\n<tr>\n<td>“FREQ:CENT 2140 MHz”</td>\n<td style=\"text-align:center\">设置测试的中心频率为2140Mhz</td>\n</tr>\n<tr>\n<td>“CONF:DL:BW BW5_00”</td>\n<td style=\"text-align:center\">设置监测5M带宽</td>\n</tr>\n<tr>\n<td>“POW:AUTO2 ON”</td>\n<td style=\"text-align:center\">打开自动调节增益</td>\n</tr>\n<tr>\n<td>“DISP:TRAC:Y:RLEV:OFFS 42”</td>\n<td style=\"text-align:center\">设置外部线损为42dbm</td>\n</tr>\n<tr>\n<td>CALC2:FEED ‘STAT:ASUM’</td>\n<td style=\"text-align:center\">进入TX总结页面</td>\n</tr>\n<tr>\n<td>INIT:CONT OFF</td>\n<td style=\"text-align:center\">设置为单次测试模式</td>\n</tr>\n<tr>\n<td>INIT;*WAI</td>\n<td style=\"text-align:center\">进行一次测试</td>\n</tr>\n<tr>\n<td>FETC:SUMM:EVM?</td>\n<td style=\"text-align:center\">读取刚刚测试的EVM平均值</td>\n</tr>\n<tr>\n<td>FETC:SUMM:EVM:ALL:MAX?</td>\n<td style=\"text-align:center\">读取EVM最大值</td>\n</tr>\n<tr>\n<td>FETC:SUMM:EVM:ALL:MIN?</td>\n<td style=\"text-align:center\">读取EVM最小值</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"测试-TX-ACLR\"><a href=\"#测试-TX-ACLR\" class=\"headerlink\" title=\"测试 TX ACLR\"></a>测试 TX ACLR</h3><table>\n<thead>\n<tr>\n<th><strong>command</strong></th>\n<th style=\"text-align:center\"><strong>解释</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“*RST”</td>\n<td style=\"text-align:center\">复位</td>\n</tr>\n<tr>\n<td>“INIT:CONT OFF”</td>\n<td style=\"text-align:center\">初始化频谱仪模式</td>\n</tr>\n<tr>\n<td>“SYST:DISP:UPD ON”</td>\n<td style=\"text-align:center\">屏幕给出显示</td>\n</tr>\n<tr>\n<td>“INST LTE”</td>\n<td style=\"text-align:center\">初始化LTE选件</td>\n</tr>\n<tr>\n<td>“FREQ:CENT “+s_Freq+”MHz”</td>\n<td style=\"text-align:center\">设置中心频率</td>\n</tr>\n<tr>\n<td>“CONF:DL:BW BW”+s_BW</td>\n<td style=\"text-align:center\">设置带宽</td>\n</tr>\n<tr>\n<td>“POW:AUTO2 ON”</td>\n<td style=\"text-align:center\">打开自动控制增益</td>\n</tr>\n<tr>\n<td>“DISP:TRAC:Y:RLEV:OFFS “+s_CableLoss</td>\n<td style=\"text-align:center\">设置外部线损</td>\n</tr>\n<tr>\n<td>“CALC2:FEED ‘SPEC:ACP’”</td>\n<td style=\"text-align:center\">进入ACLR界面</td>\n</tr>\n<tr>\n<td>“INIT:CONT OFF”</td>\n<td style=\"text-align:center\">进入单次测试模式</td>\n</tr>\n<tr>\n<td>“INIT;*WAI”</td>\n<td style=\"text-align:center\">执行一次测试</td>\n</tr>\n<tr>\n<td>“CALC1:MARK:FUNC:POW:RES?”</td>\n<td style=\"text-align:center\">取得刚刚的测试结果</td>\n</tr>\n</tbody>\n</table>\n<p>###测试RX EVM<br>主要是设置信号发生器，发出制定的波形文件</p>\n<table>\n<thead>\n<tr>\n<th><strong>command</strong></th>\n<th style=\"text-align:center\"><strong>解释</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>“*RST”</td>\n<td style=\"text-align:center\">复位</td>\n</tr>\n<tr>\n<td>“ROSC:SOUR EXT”</td>\n<td style=\"text-align:center\">使用外部时钟源</td>\n</tr>\n<tr>\n<td>“ROSC:EXT:FREQ 10MHz”</td>\n<td style=\"text-align:center\">设置外部时钟源的频率是10Mhz</td>\n</tr>\n<tr>\n<td>“ROSC:EXT:SBAN NARR”</td>\n<td style=\"text-align:center\">设置外部时钟源的同步要求为狭窄</td>\n</tr>\n<tr>\n<td>“BB:ARB:WAV:SEL ‘“+s_wavePath+”\\“+”LTE_UL_4GMax<em>PN18</em>“+s<em>BandWidth+”</em>“+s_Modulation+”‘“</td>\n<td style=\"text-align:center\">设置本地波形文件路径</td>\n</tr>\n<tr>\n<td>“FREQ “+s_Freq+”Mhz” + “BB:ARB:TRIG:SEQ AUTO”</td>\n<td style=\"text-align:center\">设置发出的波形的频率</td>\n</tr>\n<tr>\n<td>“BB:ARB:STAT ON”</td>\n<td style=\"text-align:center\">加载刚刚选择的波形</td>\n</tr>\n<tr>\n<td>“POW:OFFS “+s_OffSet</td>\n<td style=\"text-align:center\">加入外部线损的计算</td>\n</tr>\n<tr>\n<td>“:POW “+s_RfOutLev + “OUTP ON”</td>\n<td style=\"text-align:center\">打开外部输出</td>\n</tr>\n</tbody>\n</table>\n<p>写了个Python脚本，主要依靠telnet来发送上述命令实现控制和读取结果，代码放在<br><a href=\"https://github.com/yunpengb/rohde_schwarz_remote_control\" target=\"_blank\" rel=\"external\">https://github.com/yunpengb/rohde_schwarz_remote_control</a></p>\n","categories":[],"tags":[]},{"title":"python 实现在cmd里执行命令","url":"http://yoursite.com/2015/04/09/py_cmd/","content":"<p>我在写脚本实现一些手动的工作自动化的过程中，有一个需求是<br>在win的cmd里输入命令，参考一些信息实现如下：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div><div class=\"line\">34</div><div class=\"line\">35</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">import</span> os</div><div class=\"line\"><span class=\"keyword\">import</span> re</div><div class=\"line\"></div><div class=\"line\">dir = <span class=\"string\">\"FRM35.09.R01\"</span></div><div class=\"line\">cmd = [<span class=\"string\">\"C:\"</span>,<span class=\"string\">\"cd C:\\\\Temp_a\\\\\"</span> + dir + <span class=\"string\">\"\\\\C_Element\\\\SE_RFM\\\\SS_REL3\\\\RnD\"</span>,<span class=\"string\">\"dir\"</span>]</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># execute command, and return the output</span></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">runCmd</span><span class=\"params\">(cmd)</span>:</span></div><div class=\"line\">    <span class=\"keyword\">global</span> r</div><div class=\"line\">    r = os.popen(cmd)</div><div class=\"line\">    text = r.read()</div><div class=\"line\">    <span class=\"keyword\">return</span> text</div><div class=\"line\"></div><div class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">closeCmd</span><span class=\"params\">()</span>:</span></div><div class=\"line\">    r.close()</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\"># for i in range(len(cmd)):</span></div><div class=\"line\">    <span class=\"comment\"># result = runCmd(cmd[i])</span></div><div class=\"line\">    <span class=\"comment\"># print (\"--&gt;Cmd send: %s\" % cmd[i])</span></div><div class=\"line\">    <span class=\"comment\"># print (\"&lt;--Cmd back: %s\" % result)</span></div><div class=\"line\"><span class=\"comment\"># closeCmd()</span></div><div class=\"line\"></div><div class=\"line\">cc = cmd[<span class=\"number\">0</span>]</div><div class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> range(<span class=\"number\">1</span>,len(cmd)):</div><div class=\"line\">    cc = cc + <span class=\"string\">\"&amp;&amp;\"</span> + cmd[i]</div><div class=\"line\">result = runCmd(cc)</div><div class=\"line\"></div><div class=\"line\"></div><div class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">\"--&gt;Cmd send: %s\"</span> % cc)</div><div class=\"line\"><span class=\"keyword\">print</span> (<span class=\"string\">\"&lt;--Cmd back: %s\"</span> % result)</div><div class=\"line\"></div><div class=\"line\"><span class=\"comment\">#pattern = r\"^FRM-.*?LAR\\n$\"</span></div><div class=\"line\">pattern = <span class=\"string\">r\"FRM-\\w*\"</span></div><div class=\"line\">res = re.findall(pattern,result)</div><div class=\"line\"><span class=\"keyword\">print</span> res</div></pre></td></tr></table></figure>\n<p>end</p>\n","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]